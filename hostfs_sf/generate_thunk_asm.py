#!/bin/env python3
from jinja2 import Environment,FileSystemLoader
import sys

# This script generates the thunk asm, this is because
# armips kind of sucks a lot. :(

# Thunks that should be generated by this script
thunks = [
    {'source': 'CPS2CDStore_ct'},
    {'source': 'CPS2CDStore_dt'},
    {'source': 'CPS2CDStore_Open'},
    {'source': 'CPS2CDStore_Close'},
    {'source': 'CPS2CDStore_SeekToBeginning'},
    {'source': 'CPS2CDStore_Seek'},
    {'source': 'CPS2CDStore_SeekToEnd'},
    {'source': 'CPS2CDStore_Read'},
    {'source': 'CPS2CDStore_ReadString'},
    {'source': 'CPS2CDStore_ReadLine'},
    {'source': 'CPS2CDStore_Write'},
    {'source': 'CPS2CDStore_Resize'},
    {'source': 'CPS2CDStore_GetSize'},
    {'source': 'CPS2CDStore_GetCurrPos'},
    {'source': 'CPS2CDStore_IsOpen'}
]

env = Environment(loader=FileSystemLoader('.'), trim_blocks=True, lstrip_blocks=True)
thunk_header_template = env.get_template('templates/thunk_header.jinja2')
thunk_template = env.get_template('templates/thunk.jinja2')
region = sys.argv[2]

with open(sys.argv[1], 'w') as asmFile:
    asmFile.write('; This file is generated by generate_thunk_asm.py.\n')
    asmFile.write(thunk_header_template.render(region=region))
    asmFile.write('\n')
    for thunk in thunks:
        asmFile.write(thunk_template.render(
            region=region,
            source_func=thunk['source'],
            target_func=thunk['source'].replace('CPS2CDStore', 'CPS2DiskStore')
        ))
        asmFile.write('\n')
    
    